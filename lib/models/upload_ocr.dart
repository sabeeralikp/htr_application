/// 
/// [Integrating OCR to HTR]
///
/// [author] Sabeerali
/// [since]	v0.0.1
/// [version]	v1.0.0	(August 17th, 2023 10:18 AM) 
///
////// The `UploadOCRModel` class represents data related to the upload of Optical Character Recognition (OCR) files
/// in the Flutter application.
///
/// This class is used to model data for uploaded OCR files, including file details such as filename, file type,
/// number of pages, predicted text, uploader information, and timestamps. It is typically used with a Django backend API.
///
/// Attributes:
///   - [id]: An integer representing the unique identifier for the uploaded OCR data.
///   - [filename]: A string containing the filename of the uploaded OCR file.
///   - [file]: A string representing the file path or URL of the uploaded OCR file.
///   - [fileType]: A string indicating the type or format of the uploaded OCR file.
///   - [numberOfPages]: An integer representing the number of pages in the uploaded OCR document.
///   - [predictedText]: A string containing the predicted text generated by OCR.
///   - [uploadedBy]: A string containing the name or identifier of the user who uploaded the OCR file.
///   - [uploadedOn]: A string representing the date and time when the OCR file was uploaded.
///
/// Constructors:
///   - [UploadOCRModel]: Initializes an `UploadOCRModel` object with optional parameters.
///       - [id]: The unique identifier for the uploaded OCR data.
///       - [filename]: The filename of the uploaded OCR file.
///       - [file]: The file path or URL of the uploaded OCR file.
///       - [fileType]: The type or format of the uploaded OCR file.
///       - [numberOfPages]: The number of pages in the uploaded OCR document.
///       - [predictedText]: The predicted text generated by OCR.
///       - [uploadedBy]: The name or identifier of the user who uploaded the OCR file.
///       - [uploadedOn]: The timestamp indicating when the OCR file was uploaded.
///
///   - [UploadOCRModel.fromJson]: Creates an `UploadOCRModel` object from a JSON map.
///
///   - [toJson]: Converts the `UploadOCRModel` object to a JSON map.
///
///   - [fromList]: Creates a list of `UploadOCRModel` objects from a list of JSON maps.
///
///   - [copyWith]: Creates a copy of the `UploadOCRModel` object with optional new values.
class UploadOCRModel {
  int? id;
  String? filename;
  String? file;
  String? fileType;
  int? numberOfPages;
  String? predictedText;
  String? uploadedBy;
  String? uploadedOn;
/// Constructs an `UploadOCRModel` object with optional parameters.
  UploadOCRModel(
      {this.id,
      this.filename,
      this.file,
      this.fileType,
      this.numberOfPages,
      this.predictedText,
      this.uploadedBy,
      this.uploadedOn});
/// Creates an `UploadOCRModel` object from a JSON map.
///
/// [json]: A map containing JSON data to initialize the object.
  UploadOCRModel.fromJson(Map<String, dynamic> json) {
    id = json["id"];
    filename = json["filename"];
    file = json["file"];
    fileType = json["file_type"];
    numberOfPages = json["number_of_pages"];
    predictedText = json["predicted_text"];
    uploadedBy = json["uploaded_by"];
    uploadedOn = json["uploaded_on"];
  }

  static List<UploadOCRModel> fromList(List<Map<String, dynamic>> list) {
    return list.map((map) => UploadOCRModel.fromJson(map)).toList();
  }
/// Converts the `UploadOCRModel` object to a JSON map.
///
/// Returns: A map representing the object in JSON format.
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = <String, dynamic>{};
    data["id"] = id;
    data["filename"] = filename;
    data["file"] = file;
    data["file_type"] = fileType;
    data["number_of_pages"] = numberOfPages;
    data["predicted_text"] = predictedText;
    data["uploaded_by"] = uploadedBy;
    data["uploaded_on"] = uploadedOn;
    return data;
  }
/// Creates a copy of the `UploadOCRModel` object with optional new values.
///
/// Returns: A new `UploadOCRModel` object with updated values.
  UploadOCRModel copyWith({
    int? id,
    String? filename,
    String? file,
    String? fileType,
    int? numberOfPages,
    String? predictedText,
    dynamic uploadedBy,
    String? uploadedOn,
  }) =>
      UploadOCRModel(
        id: id ?? this.id,
        filename: filename ?? this.filename,
        file: file ?? this.file,
        fileType: fileType ?? this.fileType,
        numberOfPages: numberOfPages ?? this.numberOfPages,
        predictedText: predictedText ?? this.predictedText,
        uploadedBy: uploadedBy ?? this.uploadedBy,
        uploadedOn: uploadedOn ?? this.uploadedOn,
      );
}
